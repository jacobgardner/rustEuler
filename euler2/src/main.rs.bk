use std::iter::Map;

fn main() {

    for f in Fibonacci::new() {
        if (f > 4000000) {
            break;
        }

        if f % 2 == 0 {

        }
    }

}

struct Fibonacci {
    prev: u64,
    current: u64,
}

impl Fibonacci {
    fn new() -> Fibonacci {
        Fibonacci { prev: 0, current: 1 }
    }

    fn map_until<F>(&self, f: F) -> Map<Self, F> {

    }
}

impl Iterator for Fibonacci {
    type Item = u64;

    fn next(&mut self) -> Option<u64> {
        let next = self.prev + self.current;

        self.prev = self.current;
        self.current = next;

        Some(self.prev)
    }
}
